OBJECT Codeunit 50000 Export BaseApp Static Class
{
  OBJECT-PROPERTIES
  {
    Date=28-07-18;
    Time=18:39:11;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=VAR
            OutputFile@1000 : File;
          BEGIN
            OutputFile.TEXTMODE := TRUE;
            OutputFile.WRITEMODE := TRUE;
            OutputFile.CREATE('c:\users\jhoek\Desktop\BaseApp.2018.cs');

            OutputFile.WRITE('namespace UncommonSense.CBreeze.Core');
            OutputFile.WRITE('{');
            OutputFile.WRITE('  public static partial class BaseApp');
            OutputFile.WRITE('  {');
            OutputFile.WRITE('    #if NAV2018');

            WriteTableIDs(OutputFile);
            WriteTableNames(OutputFile);
            WritePageIDs(OutputFile);
            WritePageNames(OutputFile);
            WriteCodeunitIDs(OutputFile);

            OutputFile.WRITE('    #endif');
            OutputFile.WRITE('  }');
            OutputFile.WRITE('}');
            OutputFile.CLOSE;
          END;

  }
  CODE
  {

    LOCAL PROCEDURE WriteTableIDs@2(VAR OutputFile@1000 : File);
    VAR
      AllObj@1001 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Table);
      AllObj.SETFILTER("Object ID", '<%1|>%2', 50000, 59999);

      OutputFile.WRITE('    public static class TableIDs');
      OutputFile.WRITE('    {');

      IF AllObj.FINDSET THEN
        REPEAT
          OutputFile.WRITE(STRSUBSTNO('      public const int %1 = %2;', NormalizeName(AllObj."Object Name"), AllObj."Object ID"));
        UNTIL AllObj.NEXT = 0;

      OutputFile.WRITE('    }');
    END;

    LOCAL PROCEDURE WriteTableNames@8(VAR OutputFile@1000 : File);
    VAR
      AllObj@1001 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Table);
      AllObj.SETFILTER("Object ID", '<%1|>%2', 50000, 59999);

      OutputFile.WRITE('    public static class TableNames');
      OutputFile.WRITE('    {');

      IF AllObj.FINDSET THEN
        REPEAT
          OutputFile.WRITE(STRSUBSTNO('      public const string %1 = @"%2";', NormalizeName(AllObj."Object Name"), AllObj."Object Name"));
        UNTIL AllObj.NEXT = 0;

      OutputFile.WRITE('    }');
    END;

    LOCAL PROCEDURE WritePageIDs@5(VAR OutputFile@1000 : File);
    VAR
      AllObj@1001 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Page);
      AllObj.SETFILTER("Object ID", '<%1|>%2', 50000, 59999);

      OutputFile.WRITE('    public static class PageIDs');
      OutputFile.WRITE('    {');

      IF AllObj.FINDSET THEN
        REPEAT
          OutputFile.WRITE(STRSUBSTNO('      public const int %1 = %2;', NormalizeName(AllObj."Object Name"), AllObj."Object ID"));
        UNTIL AllObj.NEXT = 0;

      OutputFile.WRITE('    }');
    END;

    LOCAL PROCEDURE WritePageNames@1000000000(VAR OutputFile@1000000000 : File);
    VAR
      AllObj@1000000001 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Page);
      AllObj.SETFILTER("Object ID", '<%1|%2', 50000, 59999);

      OutputFile.WRITE('    public static class PageNames');
      OutputFile.WRITE('    {');

      IF AllObj.FINDSET THEN
        REPEAT
          OutputFile.WRITE(STRSUBSTNO('      public const string %1 = @"%2";', NormalizeName(AllObj."Object Name"), AllObj."Object Name"));
        UNTIL AllObj.NEXT = 0;

      OutputFile.WRITE('    }');
    END;

    LOCAL PROCEDURE WriteCodeunitIDs@6(VAR OutputFile@1000 : File);
    VAR
      AllObj@1001 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Codeunit);
      AllObj.SETFILTER("Object ID", '<%1|>%2', 50000, 59999);

      OutputFile.WRITE('    public static class CodeunitIDs');
      OutputFile.WRITE('    {');

      IF AllObj.FINDSET THEN
        REPEAT
          OutputFile.WRITE(STRSUBSTNO('      public const int %1 = %2;', NormalizeName(AllObj."Object Name"), AllObj."Object ID"));
        UNTIL AllObj.NEXT = 0;

      OutputFile.WRITE('    }');
    END;

    PROCEDURE NormalizeName@1000000005(ObjectName@1000000000 : Text[30]) NormalizedName : Text[30];
    BEGIN
      ObjectName := CONVERTSTR(ObjectName, ' ', '_');
      EXIT(DELCHR(ObjectName, '=', '&()%./-+'));
    END;

    BEGIN
    END.
  }
}

